#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
    2000                   # StopTime     Time at which integration stops
  4.0000000000000002E-01   # Increment    Communication step size, if > 0
       0                   # nInterval    Number of communication intervals, if > 0
  9.9999999999999995E-07   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(757,47)
ground1.p.v
ground1.p.i
wheel.useSupportR
wheel.useSupportT
wheel.flangeR.phi
wheel.flangeR.der(phi)
wheel.flangeR.der(phi, 2)
wheel.flangeR.tau
wheel.flangeT.f
wheel.fixedR.phi0
wheel.fixedT.s0
wheel.radius
gear.useSupport
gear.flange_a.tau
gear.phi_support
gear.ratio
mass.m
mass.stateSelect
mass.s
mass.L
mass.flange_b.f
mass.v
mass.der(v)
powProp.flange_a.s
powProp.power
powDrag.flange_a.s
powDrag.power
dragForce.useSupport
dragForce.s_support
dragForce.v_small
dragForce.free
dragForce.sa
dragForce.startForward
dragForce.startBackward
dragForce.locked
dragForce.Unknown
dragForce.Free
dragForce.Forward
dragForce.Stuck
dragForce.Backward
dragForce.mode
dragForce.unitAcceleration
dragForce.unitForce
dragForce.Sign
dragForce.m
dragForce.rho
dragForce.S
dragForce.fc
dragForce.Cx
dragForce.A
dragForce.B
dragForce.f_pos[1, 1]
dragForce.f_pos[1, 2]
speedSensor1.flange.f
battery.QCellNom
battery.ECellMin
battery.ECellMax
battery.SOCMin
battery.SOCMax
battery.SOCInit
battery.ICellMax
battery.R0Cell
battery.R1Cell
battery.C1Cell
battery.efficiency
battery.iCellEfficiency
battery.ns
battery.np
battery.powerLoss
battery.cBattery.v
battery.cBattery.der(v)
battery.cBattery.p.i
battery.cBattery.n.v
battery.cBattery.C
battery.R0.R
battery.R0.T_ref
battery.R0.alpha
battery.R0.v
battery.R0.p.i
battery.R0.n.v
battery.R0.useHeatPort
battery.R0.T
battery.R0.LossPower
battery.R0.R_actual
battery.Ip.n.v
battery.p.i
battery.n.v
battery.n.i
battery.R1.R
battery.R1.T_ref
battery.R1.alpha
battery.R1.v
battery.R1.p.i
battery.R1.useHeatPort
battery.R1.T
battery.R1.LossPower
battery.R1.R_actual
battery.C1.v
battery.C1.der(v)
battery.C1.p.i
battery.C1.C
battery.SOC
battery.cDummy.v
battery.cDummy.der(v)
battery.cDummy.p.i
battery.cDummy.n.v
battery.cDummy.C
battery.efficiencyMax
battery.C
battery.k
battery.IBatteryMax
battery.EBatteryMin
battery.EBatteryMax
battery.QBatteryNominal
battery.CBattery
battery.R0Battery
battery.R1Battery
battery.Rtot
battery.RtotCell
battery.C1Battery
battery.ECell
battery.iCellStray
battery.EBattery
battery.iBatteryStray
battery.gain.k
battery.gain.y
battery.abs1.generateEvent
drive.powMax
drive.tauMax
drive.uDcNom
drive.wMax
drive.J
drive.mapsOnFile
drive.effTable[1, 1]
drive.effTable[1, 2]
drive.effTable[1, 3]
drive.effTable[2, 1]
drive.effTable[2, 2]
drive.effTable[2, 3]
drive.effTable[3, 1]
drive.effTable[3, 2]
drive.effTable[3, 3]
drive.wSensor.flange.phi
drive.wSensor.flange.tau
drive.limTau.w
drive.limTau.yH
drive.limTau.powMax
drive.limTau.tauMax
drive.limTau.wMax
drive.limTau.state
drive.limTau.alpha
drive.limTau.yL
drive.toElePow.mapsOnFile
drive.toElePow.tauMax
drive.toElePow.powMax
drive.toElePow.wMax
drive.toElePow.effTable[1, 1]
drive.toElePow.effTable[1, 2]
drive.toElePow.effTable[1, 3]
drive.toElePow.effTable[2, 1]
drive.toElePow.effTable[2, 2]
drive.toElePow.effTable[2, 3]
drive.toElePow.effTable[3, 1]
drive.toElePow.effTable[3, 2]
drive.toElePow.effTable[3, 3]
drive.toElePow.toEff.u1
drive.toElePow.toEff.u2
drive.toElePow.toEff.tableOnFile
drive.toElePow.toEff.table[1, 1]
drive.toElePow.toEff.table[1, 2]
drive.toElePow.toEff.table[1, 3]
drive.toElePow.toEff.table[2, 1]
drive.toElePow.toEff.table[2, 2]
drive.toElePow.toEff.table[2, 3]
drive.toElePow.toEff.table[3, 1]
drive.toElePow.toEff.table[3, 2]
drive.toElePow.toEff.table[3, 3]
drive.toElePow.toEff.verboseRead
drive.toElePow.toEff.smoothness
drive.toElePow.toEff.extrapolation
drive.toElePow.toEff.verboseExtrapolation
drive.toElePow.toEff.u_min[1]
drive.toElePow.toEff.u_min[2]
drive.toElePow.toEff.u_max[1]
drive.toElePow.toEff.u_max[2]
drive.toElePow.toEff.tableID.id
drive.toElePow.tau
drive.toElePow.abs1.y
drive.toElePow.abs1.generateEvent
drive.toElePow.abs2.y
drive.toElePow.abs2.generateEvent
drive.toElePow.normalizeTau.k
drive.toElePow.applyEta.eta
drive.toElePow.applyEta.P
drive.toElePow.applyEta.Pel
drive.toElePow.applyEta.Losses
drive.toElePow.normalizeSpeed.k
drive.pin_p.v
drive.pin_p.i
drive.constPDC.vNom
drive.constPDC.Ti
drive.constPDC.feedback1.u2
drive.constPDC.feedback1.y
drive.constPDC.pin_p.v
drive.constPDC.Pref
drive.constPDC.pSensor.pc.v
drive.constPDC.pSensor.nc.v
drive.constPDC.pSensor.pv.v
drive.constPDC.pSensor.pv.i
drive.constPDC.pSensor.nv.i
drive.constPDC.pSensor.voltageSensor.p.v
drive.constPDC.pSensor.voltageSensor.p.i
drive.constPDC.pSensor.voltageSensor.n.i
drive.constPDC.pSensor.currentSensor.p.v
drive.constPDC.pSensor.currentSensor.n.v
drive.constPDC.varCond.T_ref
drive.constPDC.varCond.alpha
drive.constPDC.varCond.p.v
drive.constPDC.varCond.useHeatPort
drive.constPDC.varCond.T
drive.constPDC.varCond.LossPower
drive.constPDC.varCond.G_actual
drive.constPDC.integrator1.k
drive.constPDC.integrator1.use_reset
drive.constPDC.integrator1.use_set
drive.constPDC.integrator1.initType
drive.constPDC.integrator1.y_start
drive.constPDC.integrator1.y
drive.constPDC.integrator1.der(y)
drive.constPDC.integrator1.local_reset
drive.constPDC.integrator1.local_set
drive.inertia.J
drive.inertia.stateSelect
drive.inertia.w
drive.inertia.der(w)
drive.torque.useSupport
drive.torque.phi_support
drive.gain.k
drive.powSensor.power
drive.variableLimiter.strict
drive.variableLimiter.homotopyType
drive.variableLimiter.ySimplified
drive.tauRef
gsPow.pc.i
gsPow.pv.i
gsPow.nv.v
gsPow.nv.i
gsPow.power
gsPow.voltageSensor.p.i
gsPow.voltageSensor.n.v
gsPow.voltageSensor.n.i
ems.tauPowFilt
ems.powLow
ems.powHigh
ems.powPerSoc
ems.powMax
ems.socRef
ems.limiter.uMax
ems.limiter.uMin
ems.limiter.strict
ems.limiter.homotopyType
ems.limiter.u
ems.limiter.y
ems.fbSOC.y
ems.socRef_.k
ems.socErrToPow.k
ems.socErrToPow.y
ems.add.k1
ems.add.k2
ems.edPow
ems.powHyst.uLow
ems.powHyst.uHigh
ems.powHyst.pre_y_start
ems.powHyst.y
ems.zero.k
ems.pcPowReq
ems.powFilt.k
ems.powFilt.T
ems.powFilt.initType
ems.powFilt.y_start
ems.powFilt.y
ems.powFilt.der(y)
genset.gsRatio
genset.maxGenW
genset.maxTau
genset.maxPow
genset.wIceStart
genset.speedSensor.flange.phi
genset.speedSensor.flange.tau
genset.idealGear.useSupport
genset.idealGear.flange_a.tau
genset.idealGear.flange_b.tau
genset.idealGear.phi_support
genset.idealGear.ratio
genset.IcePow.flange_a.phi
genset.IcePow.flange_a.der(phi)
genset.IcePow.power
genset.pin_n.v
genset.limiter.uMax
genset.limiter.uMin
genset.limiter.strict
genset.limiter.homotopyType
genset.limiter.y
genset.gms.tauMax
genset.gms.throttlePerWerr
genset.gms.tablesOnFile
genset.gms.optiTable[1, 1]
genset.gms.optiTable[1, 2]
genset.gms.optiTable[2, 1]
genset.gms.optiTable[2, 2]
genset.gms.optiTable[3, 1]
genset.gms.optiTable[3, 2]
genset.gms.optiTable[4, 1]
genset.gms.optiTable[4, 2]
genset.gms.optiTable[5, 1]
genset.gms.optiTable[5, 2]
genset.gms.optiTable[6, 1]
genset.gms.optiTable[6, 2]
genset.gms.optiTable[7, 1]
genset.gms.optiTable[7, 2]
genset.gms.optiTable[8, 1]
genset.gms.optiTable[8, 2]
genset.gms.optiTable[9, 1]
genset.gms.optiTable[9, 2]
genset.gms.optiSpeed.n
genset.gms.optiSpeed.y[1]
genset.gms.optiSpeed.tableOnFile
genset.gms.optiSpeed.table[1, 1]
genset.gms.optiSpeed.table[1, 2]
genset.gms.optiSpeed.table[2, 1]
genset.gms.optiSpeed.table[2, 2]
genset.gms.optiSpeed.table[3, 1]
genset.gms.optiSpeed.table[3, 2]
genset.gms.optiSpeed.table[4, 1]
genset.gms.optiSpeed.table[4, 2]
genset.gms.optiSpeed.table[5, 1]
genset.gms.optiSpeed.table[5, 2]
genset.gms.optiSpeed.table[6, 1]
genset.gms.optiSpeed.table[6, 2]
genset.gms.optiSpeed.table[7, 1]
genset.gms.optiSpeed.table[7, 2]
genset.gms.optiSpeed.table[8, 1]
genset.gms.optiSpeed.table[8, 2]
genset.gms.optiSpeed.table[9, 1]
genset.gms.optiSpeed.table[9, 2]
genset.gms.optiSpeed.verboseRead
genset.gms.optiSpeed.columns[1]
genset.gms.optiSpeed.smoothness
genset.gms.optiSpeed.extrapolation
genset.gms.optiSpeed.verboseExtrapolation
genset.gms.optiSpeed.u_min
genset.gms.optiSpeed.u_max
genset.gms.optiSpeed.tableID.id
genset.gms.division.u2
genset.gms.division.y
genset.gms.tRef
genset.gms.throttle
genset.gms.feedback.u1
genset.gms.feedback.u2
genset.gms.feedback.y
genset.gms.gain.k
genset.gms.zero.k
genset.gms.limMinW.uMax
genset.gms.limMinW.uMin
genset.gms.limMinW.strict
genset.gms.limMinW.homotopyType
genset.gms.maxTau.n
genset.gms.maxTau.y[1]
genset.gms.maxTau.tableOnFile
genset.gms.maxTau.verboseRead
genset.gms.maxTau.columns[1]
genset.gms.maxTau.smoothness
genset.gms.maxTau.extrapolation
genset.gms.maxTau.verboseExtrapolation
genset.gms.maxTau.u_min
genset.gms.maxTau.u_max
genset.gms.maxTau.tableID.id
genset.gms.gain1.k
genset.gms.gain1.y
genset.gms.tauLimiter.strict
genset.gms.tauLimiter.homotopyType
genset.gms.tauLimiter.ySimplified
genset.gen.powMax
genset.gen.tauMax
genset.gen.uDcNom
genset.gen.wMax
genset.gen.J
genset.gen.mapsOnFile
genset.gen.effTable[1, 1]
genset.gen.effTable[1, 2]
genset.gen.effTable[1, 3]
genset.gen.effTable[2, 1]
genset.gen.effTable[2, 2]
genset.gen.effTable[2, 3]
genset.gen.effTable[3, 1]
genset.gen.effTable[3, 2]
genset.gen.effTable[3, 3]
genset.gen.wSensor.flange.tau
genset.gen.limTau.w
genset.gen.limTau.yH
genset.gen.limTau.powMax
genset.gen.limTau.tauMax
genset.gen.limTau.wMax
genset.gen.limTau.state
genset.gen.limTau.alpha
genset.gen.limTau.yL
genset.gen.toElePow.mapsOnFile
genset.gen.toElePow.tauMax
genset.gen.toElePow.powMax
genset.gen.toElePow.wMax
genset.gen.toElePow.effTable[1, 1]
genset.gen.toElePow.effTable[1, 2]
genset.gen.toElePow.effTable[1, 3]
genset.gen.toElePow.effTable[2, 1]
genset.gen.toElePow.effTable[2, 2]
genset.gen.toElePow.effTable[2, 3]
genset.gen.toElePow.effTable[3, 1]
genset.gen.toElePow.effTable[3, 2]
genset.gen.toElePow.effTable[3, 3]
genset.gen.toElePow.toEff.u1
genset.gen.toElePow.toEff.u2
genset.gen.toElePow.toEff.tableOnFile
genset.gen.toElePow.toEff.table[1, 1]
genset.gen.toElePow.toEff.table[1, 2]
genset.gen.toElePow.toEff.table[1, 3]
genset.gen.toElePow.toEff.table[2, 1]
genset.gen.toElePow.toEff.table[2, 2]
genset.gen.toElePow.toEff.table[2, 3]
genset.gen.toElePow.toEff.table[3, 1]
genset.gen.toElePow.toEff.table[3, 2]
genset.gen.toElePow.toEff.table[3, 3]
genset.gen.toElePow.toEff.verboseRead
genset.gen.toElePow.toEff.smoothness
genset.gen.toElePow.toEff.extrapolation
genset.gen.toElePow.toEff.verboseExtrapolation
genset.gen.toElePow.toEff.u_min[1]
genset.gen.toElePow.toEff.u_min[2]
genset.gen.toElePow.toEff.u_max[1]
genset.gen.toElePow.toEff.u_max[2]
genset.gen.toElePow.toEff.tableID.id
genset.gen.toElePow.tau
genset.gen.toElePow.abs1.y
genset.gen.toElePow.abs1.generateEvent
genset.gen.toElePow.abs2.y
genset.gen.toElePow.abs2.generateEvent
genset.gen.toElePow.normalizeTau.k
genset.gen.toElePow.applyEta.eta
genset.gen.toElePow.applyEta.P
genset.gen.toElePow.applyEta.Pel
genset.gen.toElePow.applyEta.Losses
genset.gen.toElePow.normalizeSpeed.k
genset.gen.pin_p.v
genset.gen.constPDC.vNom
genset.gen.constPDC.Ti
genset.gen.constPDC.feedback1.u2
genset.gen.constPDC.feedback1.y
genset.gen.constPDC.pin_p.v
genset.gen.constPDC.Pref
genset.gen.constPDC.pSensor.pc.v
genset.gen.constPDC.pSensor.nc.v
genset.gen.constPDC.pSensor.pv.v
genset.gen.constPDC.pSensor.pv.i
genset.gen.constPDC.pSensor.nv.i
genset.gen.constPDC.pSensor.voltageSensor.p.v
genset.gen.constPDC.pSensor.voltageSensor.p.i
genset.gen.constPDC.pSensor.voltageSensor.n.i
genset.gen.constPDC.pSensor.currentSensor.p.v
genset.gen.constPDC.pSensor.currentSensor.n.v
genset.gen.constPDC.varCond.T_ref
genset.gen.constPDC.varCond.alpha
genset.gen.constPDC.varCond.p.v
genset.gen.constPDC.varCond.useHeatPort
genset.gen.constPDC.varCond.T
genset.gen.constPDC.varCond.LossPower
genset.gen.constPDC.varCond.G_actual
genset.gen.constPDC.integrator1.k
genset.gen.constPDC.integrator1.use_reset
genset.gen.constPDC.integrator1.use_set
genset.gen.constPDC.integrator1.initType
genset.gen.constPDC.integrator1.y_start
genset.gen.constPDC.integrator1.y
genset.gen.constPDC.integrator1.der(y)
genset.gen.constPDC.integrator1.local_reset
genset.gen.constPDC.integrator1.local_set
genset.gen.inertia.J
genset.gen.inertia.stateSelect
genset.gen.inertia.w
genset.gen.inertia.der(w)
genset.gen.torque.useSupport
genset.gen.torque.phi_support
genset.gen.gain.k
genset.gen.powSensor.power
genset.gen.variableLimiter.strict
genset.gen.variableLimiter.homotopyType
genset.gen.variableLimiter.ySimplified
genset.gen.tauRef
genset.mbIce.contrGain
genset.mbIce.wIceStart
genset.mbIce.iceJ
genset.mbIce.mapsOnFile
genset.mbIce.maxIceTau[1, 1]
genset.mbIce.maxIceTau[1, 2]
genset.mbIce.maxIceTau[2, 1]
genset.mbIce.maxIceTau[2, 2]
genset.mbIce.maxIceTau[3, 1]
genset.mbIce.maxIceTau[3, 2]
genset.mbIce.maxIceTau[4, 1]
genset.mbIce.maxIceTau[4, 2]
genset.mbIce.maxIceTau[5, 1]
genset.mbIce.maxIceTau[5, 2]
genset.mbIce.specificCons[1, 1]
genset.mbIce.specificCons[1, 2]
genset.mbIce.specificCons[1, 3]
genset.mbIce.specificCons[1, 4]
genset.mbIce.specificCons[1, 5]
genset.mbIce.specificCons[1, 6]
genset.mbIce.specificCons[2, 1]
genset.mbIce.specificCons[2, 2]
genset.mbIce.specificCons[2, 3]
genset.mbIce.specificCons[2, 4]
genset.mbIce.specificCons[2, 5]
genset.mbIce.specificCons[2, 6]
genset.mbIce.specificCons[3, 1]
genset.mbIce.specificCons[3, 2]
genset.mbIce.specificCons[3, 3]
genset.mbIce.specificCons[3, 4]
genset.mbIce.specificCons[3, 5]
genset.mbIce.specificCons[3, 6]
genset.mbIce.specificCons[4, 1]
genset.mbIce.specificCons[4, 2]
genset.mbIce.specificCons[4, 3]
genset.mbIce.specificCons[4, 4]
genset.mbIce.specificCons[4, 5]
genset.mbIce.specificCons[4, 6]
genset.mbIce.specificCons[5, 1]
genset.mbIce.specificCons[5, 2]
genset.mbIce.specificCons[5, 3]
genset.mbIce.specificCons[5, 4]
genset.mbIce.specificCons[5, 5]
genset.mbIce.specificCons[5, 6]
genset.mbIce.specificCons[6, 1]
genset.mbIce.specificCons[6, 2]
genset.mbIce.specificCons[6, 3]
genset.mbIce.specificCons[6, 4]
genset.mbIce.specificCons[6, 5]
genset.mbIce.specificCons[6, 6]
genset.mbIce.specificCons[7, 1]
genset.mbIce.specificCons[7, 2]
genset.mbIce.specificCons[7, 3]
genset.mbIce.specificCons[7, 4]
genset.mbIce.specificCons[7, 5]
genset.mbIce.specificCons[7, 6]
genset.mbIce.specificCons[8, 1]
genset.mbIce.specificCons[8, 2]
genset.mbIce.specificCons[8, 3]
genset.mbIce.specificCons[8, 4]
genset.mbIce.specificCons[8, 5]
genset.mbIce.specificCons[8, 6]
genset.mbIce.specificCons[9, 1]
genset.mbIce.specificCons[9, 2]
genset.mbIce.specificCons[9, 3]
genset.mbIce.specificCons[9, 4]
genset.mbIce.specificCons[9, 5]
genset.mbIce.specificCons[9, 6]
genset.mbIce.specificCons[10, 1]
genset.mbIce.specificCons[10, 2]
genset.mbIce.specificCons[10, 3]
genset.mbIce.specificCons[10, 4]
genset.mbIce.specificCons[10, 5]
genset.mbIce.specificCons[10, 6]
genset.mbIce.inertia.flange_a.tau
genset.mbIce.inertia.J
genset.mbIce.inertia.stateSelect
genset.mbIce.inertia.w
genset.mbIce.inertia.der(w)
genset.mbIce.iceTau.useSupport
genset.mbIce.iceTau.phi_support
genset.mbIce.icePow.power
genset.mbIce.w.flange.tau
genset.mbIce.toPowW.y
genset.mbIce.toGramsPerkWh.y
genset.mbIce.toGramsPerkWh.tableOnFile
genset.mbIce.toGramsPerkWh.table[1, 1]
genset.mbIce.toGramsPerkWh.table[1, 2]
genset.mbIce.toGramsPerkWh.table[1, 3]
genset.mbIce.toGramsPerkWh.table[1, 4]
genset.mbIce.toGramsPerkWh.table[1, 5]
genset.mbIce.toGramsPerkWh.table[1, 6]
genset.mbIce.toGramsPerkWh.table[2, 1]
genset.mbIce.toGramsPerkWh.table[2, 2]
genset.mbIce.toGramsPerkWh.table[2, 3]
genset.mbIce.toGramsPerkWh.table[2, 4]
genset.mbIce.toGramsPerkWh.table[2, 5]
genset.mbIce.toGramsPerkWh.table[2, 6]
genset.mbIce.toGramsPerkWh.table[3, 1]
genset.mbIce.toGramsPerkWh.table[3, 2]
genset.mbIce.toGramsPerkWh.table[3, 3]
genset.mbIce.toGramsPerkWh.table[3, 4]
genset.mbIce.toGramsPerkWh.table[3, 5]
genset.mbIce.toGramsPerkWh.table[3, 6]
genset.mbIce.toGramsPerkWh.table[4, 1]
genset.mbIce.toGramsPerkWh.table[4, 2]
genset.mbIce.toGramsPerkWh.table[4, 3]
genset.mbIce.toGramsPerkWh.table[4, 4]
genset.mbIce.toGramsPerkWh.table[4, 5]
genset.mbIce.toGramsPerkWh.table[4, 6]
genset.mbIce.toGramsPerkWh.table[5, 1]
genset.mbIce.toGramsPerkWh.table[5, 2]
genset.mbIce.toGramsPerkWh.table[5, 3]
genset.mbIce.toGramsPerkWh.table[5, 4]
genset.mbIce.toGramsPerkWh.table[5, 5]
genset.mbIce.toGramsPerkWh.table[5, 6]
genset.mbIce.toGramsPerkWh.table[6, 1]
genset.mbIce.toGramsPerkWh.table[6, 2]
genset.mbIce.toGramsPerkWh.table[6, 3]
genset.mbIce.toGramsPerkWh.table[6, 4]
genset.mbIce.toGramsPerkWh.table[6, 5]
genset.mbIce.toGramsPerkWh.table[6, 6]
genset.mbIce.toGramsPerkWh.table[7, 1]
genset.mbIce.toGramsPerkWh.table[7, 2]
genset.mbIce.toGramsPerkWh.table[7, 3]
genset.mbIce.toGramsPerkWh.table[7, 4]
genset.mbIce.toGramsPerkWh.table[7, 5]
genset.mbIce.toGramsPerkWh.table[7, 6]
genset.mbIce.toGramsPerkWh.table[8, 1]
genset.mbIce.toGramsPerkWh.table[8, 2]
genset.mbIce.toGramsPerkWh.table[8, 3]
genset.mbIce.toGramsPerkWh.table[8, 4]
genset.mbIce.toGramsPerkWh.table[8, 5]
genset.mbIce.toGramsPerkWh.table[8, 6]
genset.mbIce.toGramsPerkWh.table[9, 1]
genset.mbIce.toGramsPerkWh.table[9, 2]
genset.mbIce.toGramsPerkWh.table[9, 3]
genset.mbIce.toGramsPerkWh.table[9, 4]
genset.mbIce.toGramsPerkWh.table[9, 5]
genset.mbIce.toGramsPerkWh.table[9, 6]
genset.mbIce.toGramsPerkWh.table[10, 1]
genset.mbIce.toGramsPerkWh.table[10, 2]
genset.mbIce.toGramsPerkWh.table[10, 3]
genset.mbIce.toGramsPerkWh.table[10, 4]
genset.mbIce.toGramsPerkWh.table[10, 5]
genset.mbIce.toGramsPerkWh.table[10, 6]
genset.mbIce.toGramsPerkWh.verboseRead
genset.mbIce.toGramsPerkWh.smoothness
genset.mbIce.toGramsPerkWh.extrapolation
genset.mbIce.toGramsPerkWh.verboseExtrapolation
genset.mbIce.toGramsPerkWh.u_min[1]
genset.mbIce.toGramsPerkWh.u_min[2]
genset.mbIce.toGramsPerkWh.u_max[1]
genset.mbIce.toGramsPerkWh.u_max[2]
genset.mbIce.toGramsPerkWh.tableID.id
genset.mbIce.tokW.k
genset.mbIce.tokW.y
genset.mbIce.toG_perHour.u2
genset.mbIce.tokgFuel.k
genset.mbIce.tokgFuel.use_reset
genset.mbIce.tokgFuel.use_set
genset.mbIce.tokgFuel.initType
genset.mbIce.tokgFuel.y_start
genset.mbIce.tokgFuel.y
genset.mbIce.tokgFuel.der(y)
genset.mbIce.tokgFuel.local_reset
genset.mbIce.tokgFuel.local_set
genset.mbIce.zero.k
genset.mbIce.toLimTau.n
genset.mbIce.toLimTau.y[1]
genset.mbIce.toLimTau.tableOnFile
genset.mbIce.toLimTau.table[1, 1]
genset.mbIce.toLimTau.table[1, 2]
genset.mbIce.toLimTau.table[2, 1]
genset.mbIce.toLimTau.table[2, 2]
genset.mbIce.toLimTau.table[3, 1]
genset.mbIce.toLimTau.table[3, 2]
genset.mbIce.toLimTau.table[4, 1]
genset.mbIce.toLimTau.table[4, 2]
genset.mbIce.toLimTau.table[5, 1]
genset.mbIce.toLimTau.table[5, 2]
genset.mbIce.toLimTau.verboseRead
genset.mbIce.toLimTau.columns[1]
genset.mbIce.toLimTau.smoothness
genset.mbIce.toLimTau.extrapolation
genset.mbIce.toLimTau.verboseExtrapolation
genset.mbIce.toLimTau.u_min
genset.mbIce.toLimTau.u_max
genset.mbIce.toLimTau.tableID.id
genset.mbIce.product.u2
genset.mbIce.limiter.uMax
genset.mbIce.limiter.uMin
genset.mbIce.limiter.strict
genset.mbIce.limiter.homotopyType
genset.mbIce.fuelCons
genset.mbIce.onSignal.k
genset.revGain.k
genset.toGrams.k
genset.toGrams.use_reset
genset.toGrams.use_set
genset.toGrams.initType
genset.toGrams.y_start
genset.toGrams.y
genset.toGrams.der(y)
genset.toGrams.local_reset
genset.toGrams.local_set
driver.k
driver.yMax
driver.extrapolation
driver.dummy
driver.from_kmh.u
driver.from_kmh.y
driver.driveCyc.nout
driver.driveCyc.tableOnFile
driver.driveCyc.verboseRead
driver.driveCyc.columns[1]
driver.driveCyc.smoothness
driver.driveCyc.extrapolation
driver.driveCyc.timeScale
driver.driveCyc.offset[1]
driver.driveCyc.startTime
driver.driveCyc.shiftTime
driver.driveCyc.timeEvents
driver.driveCyc.verboseExtrapolation
driver.driveCyc.t_min
driver.driveCyc.t_max
driver.driveCyc.t_minScaled
driver.driveCyc.t_maxScaled
driver.driveCyc.p_offset[1]
driver.driveCyc.tableID.id
driver.driveCyc.nextTimeEvent
driver.driveCyc.nextTimeEventScaled
driver.driveCyc.timeScaled
driver.feedback.y
driver.gain.k
driver.gain.y
driver.limAcc.uMax
driver.limAcc.uMin
driver.limAcc.strict
driver.limAcc.homotopyType
driver.limBrak.uMax
driver.limBrak.uMin
driver.limBrak.strict
driver.limBrak.homotopyType
driver.accelTau
driver.brakeTau
driver.limiter1.uMax
driver.limiter1.uMin
driver.limiter1.strict
driver.limiter1.homotopyType
drivePow.pv.i
drivePow.nv.v
drivePow.nv.i
drivePow.voltageSensor.p.i
drivePow.voltageSensor.n.v
drivePow.voltageSensor.n.i
stateSelect.set1.x[1]
stateSelect.set1.der(x[1])
stateSelect.set1.P[1, 1]
stateSelect.set1.P[1, 2]
stateSelect.set1.P[1, 3]

double initialValue(757,6)
  0       0                       0                       0                
  6   260   # ground1.p.v
  0       0                       0                       0                
  6   388   # ground1.p.i
  0       0                       0                       0                
  6   769   # wheel.useSupportR
  0       0                       0                       0                
  6   769   # wheel.useSupportT
 -1       0                       0                       0                
  2   284   # wheel.flangeR.phi
  0       0                       0                       0                
  3   260   # wheel.flangeR.der(phi)
  0       0                       0                       0                
  6   260   # wheel.flangeR.der(phi, 2)
  0       0                       0                       0                
  6   388   # wheel.flangeR.tau
  0       0                       0                       0                
  6   388   # wheel.flangeT.f
 -1       0                       0                       0                
  1  1304   # wheel.fixedR.phi0
 -1       0                       0                       0                
  1  1304   # wheel.fixedT.s0
 -1  4.7299999999999998E-01       0                 1.0000000000000000E+100
  1   280   # wheel.radius
  0       0                       0                       0                
  6   769   # gear.useSupport
  0       0                       0                       0                
  6   388   # gear.flange_a.tau
  0       0                       0                       0                
  6  1280   # gear.phi_support
 -1      10                       0                       0                
  1   280   # gear.ratio
 -1   14000                       0                 1.0000000000000000E+100
  1   280   # mass.m
  0       3                       1                       5                
  6   258   # mass.stateSelect
  0       0                       0                       0                
  6   256   # mass.s
 -1       0                       0                       0                
  1   280   # mass.L
  0       0                       0                       0                
  6   388   # mass.flange_b.f
  0       0                       0                       0                
  6   264   # mass.v
  0       0                       0                       0                
  6   256   # mass.der(v)
  0       0                       0                       0                
  6   260   # powProp.flange_a.s
  0       0                       0                       0                
  6   256   # powProp.power
  0       0                       0                       0                
  6   260   # powDrag.flange_a.s
  0       0                       0                       0                
  6   256   # powDrag.power
  0       0                       0                       0                
  6   769   # dragForce.useSupport
  0       0                       0                       0                
  6  1280   # dragForce.s_support
 -1  1.0000000000000000E-03       0                       0                
  1   280   # dragForce.v_small
  0       0                       0                       0                
  6   257   # dragForce.free
  0       0                       0                       0                
  6   256   # dragForce.sa
  0       0                       0                       0                
  6   361   # dragForce.startForward
  0       0                       0                       0                
  6   361   # dragForce.startBackward
  0       0                       0                       0                
  6   353   # dragForce.locked
  0       3                       0                       0                
  6   258   # dragForce.Unknown
  0       2                       0                       0                
  6   258   # dragForce.Free
  0       1                       0                       0                
  6   258   # dragForce.Forward
  0       0                       0                       0                
  6   258   # dragForce.Stuck
  0      -1                       0                       0                
  6   258   # dragForce.Backward
  0       3                      -1                       3                
  6   330   # dragForce.mode
  0       1                       0                       0                
  6   768   # dragForce.unitAcceleration
  0       1                       0                       0                
  6   768   # dragForce.unitForce
  0       0                       0                       0                
  6   320   # dragForce.Sign
  0       0                       0                 1.0000000000000000E+100
  6   256   # dragForce.m
 -1  1.2260000000000000E+00       0                 1.0000000000000000E+100
  1   280   # dragForce.rho
 -1  6.5000000000000000E+00       0                       0                
  1   280   # dragForce.S
 -1  1.0000000000000000E-02       0                       0                
  1   280   # dragForce.fc
 -1  6.5000000000000002E-01       0                       0                
  1   280   # dragForce.Cx
  0       0                       0                       0                
  6  1280   # dragForce.A
  0       0                       0                       0                
  6  1280   # dragForce.B
  0       0                       0                       0                
  6  1280   # dragForce.f_pos[1, 1]
  0       1                       0                       0                
  6  1280   # dragForce.f_pos[1, 2]
  0       0                       0                       0                
  6   388   # speedSensor1.flange.f
 -1   90000                       0                 1.0000000000000000E+100
  1   280   # battery.QCellNom
 -1  3.2999999999999998E+00       0                 1.0000000000000000E+100
  1   280   # battery.ECellMin
 -1  4.1500000000000004E+00  1.0000000000000000E-04 1.0000000000000000E+100
  1   280   # battery.ECellMax
 -1       0                       0                       1                
  1   280   # battery.SOCMin
 -1       1                       0                       1                
  1   280   # battery.SOCMax
 -1  5.0000000000000000E-01       0                       1                
  1   280   # battery.SOCInit
 -1     500                       0                 1.0000000000000000E+100
  1   280   # battery.ICellMax
 -1  3.5000000000000000E-04       0                 1.0000000000000000E+100
  1   280   # battery.R0Cell
  0       0                       0                 1.0000000000000000E+100
  6   256   # battery.R1Cell
  0       0                       0                 1.0000000000000000E+100
  6   256   # battery.C1Cell
 -1  9.0000000000000002E-01       0                  9.8999999999999999E-01
  1   280   # battery.efficiency
 -1     200                       0                 1.0000000000000000E+100
  1   280   # battery.iCellEfficiency
 -1     100                       0                       0                
  1   282   # battery.ns
 -1       1                       0                       0                
  1   282   # battery.np
  0       0                       0                       0                
  6   256   # battery.powerLoss
 -1       0                       0                       0                
  2   272   # battery.cBattery.v
  0       0                       0                       0                
  3   256   # battery.cBattery.der(v)
  0       0                       0                       0                
  6   388   # battery.cBattery.p.i
  0       0                       0                       0                
  6   260   # battery.cBattery.n.v
  0       1                       0                 1.0000000000000000E+100
  6   256   # battery.cBattery.C
  0       1                       0                       0                
  6   256   # battery.R0.R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # battery.R0.T_ref
 -1       0                       0                       0                
  1   280   # battery.R0.alpha
  0       0                       0                       0                
  6   256   # battery.R0.v
  0       0                       0                       0                
  6   388   # battery.R0.p.i
  0       0                       0                       0                
  6   260   # battery.R0.n.v
  0       0                       0                       0                
  6   769   # battery.R0.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # battery.R0.T
  0       0                       0                       0                
  6   256   # battery.R0.LossPower
  0       0                       0                       0                
  6   256   # battery.R0.R_actual
  0       0                       0                       0                
  6   260   # battery.Ip.n.v
  0       0                       0                       0                
  6   388   # battery.p.i
  0       0                       0                       0                
  6   260   # battery.n.v
  0       0                       0                       0                
  6   388   # battery.n.i
  0       1                       0                       0                
  6   256   # battery.R1.R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # battery.R1.T_ref
 -1       0                       0                       0                
  1   280   # battery.R1.alpha
  0       0                       0                       0                
  6   256   # battery.R1.v
  0       0                       0                       0                
  6   388   # battery.R1.p.i
  0       0                       0                       0                
  6   769   # battery.R1.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # battery.R1.T
  0       0                       0                       0                
  6   256   # battery.R1.LossPower
  0       0                       0                       0                
  6   256   # battery.R1.R_actual
 -1       0                       0                       0                
  2   280   # battery.C1.v
  0       0                       0                       0                
  3   256   # battery.C1.der(v)
  0       0                       0                       0                
  6   388   # battery.C1.p.i
  0       1                       0                 1.0000000000000000E+100
  6   256   # battery.C1.C
  0       0                       0                       0                
  6   256   # battery.SOC
 -1       0                       0                       0                
  2   272   # battery.cDummy.v
  0       0                       0                       0                
  3   256   # battery.cDummy.der(v)
  0       0                       0                       0                
  6   388   # battery.cDummy.p.i
  0       0                       0                       0                
  6   260   # battery.cDummy.n.v
  0       1                       0                 1.0000000000000000E+100
  6   256   # battery.cDummy.C
  0       0                       0                       0                
  6  1280   # battery.efficiencyMax
  0       0                       0                 1.0000000000000000E+100
  6  1280   # battery.C
  0       0                       0                       0                
  6  1280   # battery.k
  0       0                       0                       0                
  6  1280   # battery.IBatteryMax
  0       0                       0                       0                
  6  1280   # battery.EBatteryMin
  0       0                       0                       0                
  6  1280   # battery.EBatteryMax
  0       0                       0                       0                
  6  1280   # battery.QBatteryNominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # battery.CBattery
  0       0                       0                       0                
  6  1280   # battery.R0Battery
  0       0                       0                       0                
  6  1280   # battery.R1Battery
  0       0                       0                       0                
  6  1280   # battery.Rtot
  0       0                       0                       0                
  6  1280   # battery.RtotCell
  0       0                       0                 1.0000000000000000E+100
  6  1280   # battery.C1Battery
  0       0                       0                       0                
  6  1280   # battery.ECell
  0       0                       0                       0                
  6  1280   # battery.iCellStray
  0       0                       0                       0                
  6  1280   # battery.EBattery
  0       0                       0                       0                
  6  1280   # battery.iBatteryStray
  0       1                       0                       0                
  6  1280   # battery.gain.k
  0       0                       0                       0                
  6  1280   # battery.gain.y
  0       0                       0                       0                
  6  1281   # battery.abs1.generateEvent
 -1  1.5000000000000000E+05       0                       0                
  1   280   # drive.powMax
 -1    1000                       0                       0                
  1   280   # drive.tauMax
 -1     100                       0                       0                
  1   280   # drive.uDcNom
 -1    3000                       0                       0                
  1   280   # drive.wMax
 -1  2.5000000000000000E-01       0                       0                
  1   280   # drive.J
  0       0                       0                       0                
  6   257   # drive.mapsOnFile
 -1       0                       0                       0                
  1   280   # drive.effTable[1, 1]
 -1       0                       0                       0                
  1   280   # drive.effTable[1, 2]
 -1       1                       0                       0                
  1   280   # drive.effTable[1, 3]
 -1       0                       0                       0                
  1   280   # drive.effTable[2, 1]
 -1       1                       0                       0                
  1   280   # drive.effTable[2, 2]
 -1       1                       0                       0                
  1   280   # drive.effTable[2, 3]
 -1       1                       0                       0                
  1   280   # drive.effTable[3, 1]
 -1       1                       0                       0                
  1   280   # drive.effTable[3, 2]
 -1       1                       0                       0                
  1   280   # drive.effTable[3, 3]
  0       0                       0                       0                
  6   260   # drive.wSensor.flange.phi
  0       0                       0                       0                
  6   388   # drive.wSensor.flange.tau
  0       0                       0                       0                
  6   256   # drive.limTau.w
  0       0                       0                       0                
  6   256   # drive.limTau.yH
  0       0                       0                       0                
  6   256   # drive.limTau.powMax
  0       0                       0                       0                
  6   256   # drive.limTau.tauMax
  0       0                       0                       0                
  6   256   # drive.limTau.wMax
  0       0                       0                       0                
  6   322   # drive.limTau.state
 -1  1.0000000000000001E-01       0                       0                
  1  1304   # drive.limTau.alpha
  0       0                       0                       0                
  6   256   # drive.limTau.yL
  0       0                       0                       0                
  6   257   # drive.toElePow.mapsOnFile
  0     400                       0                       0                
  6   256   # drive.toElePow.tauMax
  0   22000                       0                       0                
  6   256   # drive.toElePow.powMax
  0     650                       0                       0                
  6   256   # drive.toElePow.wMax
  0       0                       0                       0                
  6   256   # drive.toElePow.effTable[1, 1]
  0       0                       0                       0                
  6   256   # drive.toElePow.effTable[1, 2]
  0       0                       0                       0                
  6   256   # drive.toElePow.effTable[1, 3]
  0       0                       0                       0                
  6   256   # drive.toElePow.effTable[2, 1]
  0       0                       0                       0                
  6   256   # drive.toElePow.effTable[2, 2]
  0       0                       0                       0                
  6   256   # drive.toElePow.effTable[2, 3]
  0       0                       0                       0                
  6   256   # drive.toElePow.effTable[3, 1]
  0       0                       0                       0                
  6   256   # drive.toElePow.effTable[3, 2]
  0       0                       0                       0                
  6   256   # drive.toElePow.effTable[3, 3]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.u1
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.u2
  0       0                       0                       0                
  6   257   # drive.toElePow.toEff.tableOnFile
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.table[1, 1]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.table[1, 2]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.table[1, 3]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.table[2, 1]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.table[2, 2]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.table[2, 3]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.table[3, 1]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.table[3, 2]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.table[3, 3]
 -1       1                       0                       0                
  1   281   # drive.toElePow.toEff.verboseRead
  0       1                       1                       6                
  6   258   # drive.toElePow.toEff.smoothness
  0       2                       1                       4                
  6   258   # drive.toElePow.toEff.extrapolation
  0       0                       0                       0                
  6   257   # drive.toElePow.toEff.verboseExtrapolation
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.u_min[1]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.u_min[2]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.u_max[1]
  0       0                       0                       0                
  6   256   # drive.toElePow.toEff.u_max[2]
  0       0                       0                       0                
  6  1282   # drive.toElePow.toEff.tableID.id
  0       0                       0                       0                
  6   256   # drive.toElePow.tau
  0       0                       0                       0                
  6   256   # drive.toElePow.abs1.y
  0       0                       0                       0                
  6   257   # drive.toElePow.abs1.generateEvent
  0       0                       0                       0                
  6   256   # drive.toElePow.abs2.y
  0       0                       0                       0                
  6   257   # drive.toElePow.abs2.generateEvent
  0       1                       0                       0                
  6   256   # drive.toElePow.normalizeTau.k
  0       0                       0                       0                
  6   256   # drive.toElePow.applyEta.eta
  0       0                       0                       0                
  6   256   # drive.toElePow.applyEta.P
  0       0                       0                       0                
  6   256   # drive.toElePow.applyEta.Pel
  0       0                       0                       0                
  6   256   # drive.toElePow.applyEta.Losses
  0       1                       0                       0                
  6   256   # drive.toElePow.normalizeSpeed.k
  0       0                       0                       0                
  6   260   # drive.pin_p.v
  0       0                       0                       0                
  6   388   # drive.pin_p.i
  0       0                       0                       0                
  6   256   # drive.constPDC.vNom
 -1  1.0000000000000000E-02       0                       0                
  1   280   # drive.constPDC.Ti
  0       0                       0                       0                
  6   256   # drive.constPDC.feedback1.u2
  0       0                       0                       0                
  6   256   # drive.constPDC.feedback1.y
  0       0                       0                       0                
  6   260   # drive.constPDC.pin_p.v
  0       0                       0                       0                
  6   256   # drive.constPDC.Pref
  0       0                       0                       0                
  6   260   # drive.constPDC.pSensor.pc.v
  0       0                       0                       0                
  6   260   # drive.constPDC.pSensor.nc.v
  0       0                       0                       0                
  6   260   # drive.constPDC.pSensor.pv.v
  0       0                       0                       0                
  6   388   # drive.constPDC.pSensor.pv.i
  0       0                       0                       0                
  6   388   # drive.constPDC.pSensor.nv.i
  0       0                       0                       0                
  6   260   # drive.constPDC.pSensor.voltageSensor.p.v
  0       0                       0                       0                
  6   388   # drive.constPDC.pSensor.voltageSensor.p.i
  0       0                       0                       0                
  6   388   # drive.constPDC.pSensor.voltageSensor.n.i
  0       0                       0                       0                
  6   260   # drive.constPDC.pSensor.currentSensor.p.v
  0       0                       0                       0                
  6   260   # drive.constPDC.pSensor.currentSensor.n.v
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # drive.constPDC.varCond.T_ref
 -1       0                       0                       0                
  1   280   # drive.constPDC.varCond.alpha
  0       0                       0                       0                
  6   260   # drive.constPDC.varCond.p.v
  0       0                       0                       0                
  6   769   # drive.constPDC.varCond.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.constPDC.varCond.T
  0       0                       0                       0                
  6   256   # drive.constPDC.varCond.LossPower
  0       0                       0                       0                
  6   256   # drive.constPDC.varCond.G_actual
  0       0                       0                       0                
  6   256   # drive.constPDC.integrator1.k
  0       0                       0                       0                
  6   769   # drive.constPDC.integrator1.use_reset
  0       0                       0                       0                
  6   769   # drive.constPDC.integrator1.use_set
  0       3                       1                       4                
  6   258   # drive.constPDC.integrator1.initType
 -1       0                       0                       0                
  1   280   # drive.constPDC.integrator1.y_start
 -1       0                       0                       0                
  2   272   # drive.constPDC.integrator1.y
  0       0                       0                       0                
  3   256   # drive.constPDC.integrator1.der(y)
  0       0                       0                       0                
  6   769   # drive.constPDC.integrator1.local_reset
  0       0                       0                       0                
  6   768   # drive.constPDC.integrator1.local_set
  0       1                       0                 1.0000000000000000E+100
  6   256   # drive.inertia.J
  0       3                       1                       5                
  6   770   # drive.inertia.stateSelect
  0       0                       0                       0                
  6   256   # drive.inertia.w
  0       0                       0                       0                
  6   256   # drive.inertia.der(w)
  0       0                       0                       0                
  6   769   # drive.torque.useSupport
  0       0                       0                       0                
  6  1280   # drive.torque.phi_support
 -1       1                       0                       0                
  1   280   # drive.gain.k
  0       0                       0                       0                
  6   256   # drive.powSensor.power
  0       0                       0                       0                
  6   257   # drive.variableLimiter.strict
  0       2                       1                       3                
  6   258   # drive.variableLimiter.homotopyType
 -1       0                       0                       0                
  1   280   # drive.variableLimiter.ySimplified
  0       0                       0                       0                
  6   256   # drive.tauRef
  0       0                       0                       0                
  6   388   # gsPow.pc.i
  0       0                       0                       0                
  6   388   # gsPow.pv.i
  0       0                       0                       0                
  6   260   # gsPow.nv.v
  0       0                       0                       0                
  6   388   # gsPow.nv.i
  0       0                       0                       0                
  6   256   # gsPow.power
  0       0                       0                       0                
  6   388   # gsPow.voltageSensor.p.i
  0       0                       0                       0                
  6   260   # gsPow.voltageSensor.n.v
  0       0                       0                       0                
  6   388   # gsPow.voltageSensor.n.i
 -1     300                       0                       0                
  1   280   # ems.tauPowFilt
 -1   30000                       0                       0                
  1   280   # ems.powLow
 -1   60000                       0                       0                
  1   280   # ems.powHigh
 -1  3.0000000000000000E+05       0                       0                
  1   280   # ems.powPerSoc
 -1  2.0000000000000000E+05       0                       0                
  1   280   # ems.powMax
 -1  5.9999999999999998E-01       0                       0                
  1   280   # ems.socRef
  0       1                       0                       0                
  6   256   # ems.limiter.uMax
 -1       0                       0                       0                
  1   280   # ems.limiter.uMin
  0       0                       0                       0                
  6   257   # ems.limiter.strict
  0       2                       1                       4                
  6   258   # ems.limiter.homotopyType
  0       0                       0                       0                
  6   256   # ems.limiter.u
  0       0                       0                       0                
  6   256   # ems.limiter.y
  0       0                       0                       0                
  6   256   # ems.fbSOC.y
  0       1                       0                       0                
  6   256   # ems.socRef_.k
  0       1                       0                       0                
  6   256   # ems.socErrToPow.k
  0       0                       0                       0                
  6   256   # ems.socErrToPow.y
 -1       1                       0                       0                
  1   280   # ems.add.k1
 -1       1                       0                       0                
  1   280   # ems.add.k2
  0       0                       0                       0                
  6   256   # ems.edPow
  0       0                       0                       0                
  6   256   # ems.powHyst.uLow
  0       1                       0                       0                
  6   256   # ems.powHyst.uHigh
 -1       0                       0                       0                
  1   281   # ems.powHyst.pre_y_start
  0       0                       0                       0                
  6   321   # ems.powHyst.y
 -1       0                       0                       0                
  1   280   # ems.zero.k
  0       0                       0                       0                
  6   256   # ems.pcPowReq
 -1       1                       0                       0                
  1   280   # ems.powFilt.k
  0       1                       0                       0                
  6   256   # ems.powFilt.T
  0       1                       1                       4                
  6   258   # ems.powFilt.initType
 -1   20000                       0                       0                
  1   280   # ems.powFilt.y_start
 -1       0                       0                       0                
  2   272   # ems.powFilt.y
  0       0                       0                       0                
  3   256   # ems.powFilt.der(y)
 -1       1                       0                       0                
  1   280   # genset.gsRatio
 -1     300                       0                       0                
  1   280   # genset.maxGenW
 -1     500                       0                       0                
  1   280   # genset.maxTau
 -1   45000                       0                       0                
  1   280   # genset.maxPow
 -1     300                       0                       0                
  1   280   # genset.wIceStart
  0       0                       0                       0                
  6   260   # genset.speedSensor.flange.phi
  0       0                       0                       0                
  6   388   # genset.speedSensor.flange.tau
  0       0                       0                       0                
  6   769   # genset.idealGear.useSupport
  0       0                       0                       0                
  6   388   # genset.idealGear.flange_a.tau
  0       0                       0                       0                
  6   388   # genset.idealGear.flange_b.tau
  0       0                       0                       0                
  6  1280   # genset.idealGear.phi_support
  0       1                       0                       0                
  6   256   # genset.idealGear.ratio
 -1       0                       0                       0                
  2   284   # genset.IcePow.flange_a.phi
  0       0                       0                       0                
  3  4356   # genset.IcePow.flange_a.der(phi)
  0       0                       0                       0                
  6   256   # genset.IcePow.power
  0       0                       0                       0                
  6   260   # genset.pin_n.v
 -1  9.9999999999999995E+59       0                       0                
  1   280   # genset.limiter.uMax
 -1       0                       0                       0                
  1   280   # genset.limiter.uMin
  0       0                       0                       0                
  6   257   # genset.limiter.strict
  0       2                       1                       4                
  6   258   # genset.limiter.homotopyType
  0       0                       0                       0                
  6   256   # genset.limiter.y
 -1     100                       0                       0                
  1   280   # genset.gms.tauMax
 -1  1.0000000000000001E-01       0                       0                
  1   280   # genset.gms.throttlePerWerr
  0       1                       0                       0                
  6   257   # genset.gms.tablesOnFile
 -1       0                       0                       0                
  1   280   # genset.gms.optiTable[1, 1]
 -1     800                       0                       0                
  1   280   # genset.gms.optiTable[1, 2]
 -1   20000                       0                       0                
  1   280   # genset.gms.optiTable[2, 1]
 -1     850                       0                       0                
  1   280   # genset.gms.optiTable[2, 2]
 -1   40000                       0                       0                
  1   280   # genset.gms.optiTable[3, 1]
 -1    1100                       0                       0                
  1   280   # genset.gms.optiTable[3, 2]
 -1   60000                       0                       0                
  1   280   # genset.gms.optiTable[4, 1]
 -1    1250                       0                       0                
  1   280   # genset.gms.optiTable[4, 2]
 -1   80000                       0                       0                
  1   280   # genset.gms.optiTable[5, 1]
 -1    1280                       0                       0                
  1   280   # genset.gms.optiTable[5, 2]
 -1  100000                       0                       0                
  1   280   # genset.gms.optiTable[6, 1]
 -1    1340                       0                       0                
  1   280   # genset.gms.optiTable[6, 2]
 -1  1.2000000000000000E+05       0                       0                
  1   280   # genset.gms.optiTable[7, 1]
 -1    1400                       0                       0                
  1   280   # genset.gms.optiTable[7, 2]
 -1  1.4000000000000000E+05       0                       0                
  1   280   # genset.gms.optiTable[8, 1]
 -1    1650                       0                       0                
  1   280   # genset.gms.optiTable[8, 2]
 -1  1.6000000000000000E+05       0                       0                
  1   280   # genset.gms.optiTable[9, 1]
 -1    2130                       0                       0                
  1   280   # genset.gms.optiTable[9, 2]
  0       1                       0                       0                
  6   258   # genset.gms.optiSpeed.n
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.y[1]
  0       1                       0                       0                
  6   257   # genset.gms.optiSpeed.tableOnFile
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[1, 1]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[1, 2]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[2, 1]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[2, 2]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[3, 1]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[3, 2]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[4, 1]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[4, 2]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[5, 1]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[5, 2]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[6, 1]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[6, 2]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[7, 1]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[7, 2]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[8, 1]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[8, 2]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[9, 1]
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.table[9, 2]
 -1       1                       0                       0                
  1   281   # genset.gms.optiSpeed.verboseRead
 -1       2                       0                       0                
  1   282   # genset.gms.optiSpeed.columns[1]
  0       2                       1                       6                
  6   258   # genset.gms.optiSpeed.smoothness
  0       2                       1                       4                
  6   258   # genset.gms.optiSpeed.extrapolation
  0       0                       0                       0                
  6   257   # genset.gms.optiSpeed.verboseExtrapolation
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.u_min
  0       0                       0                       0                
  6   256   # genset.gms.optiSpeed.u_max
  0       0                       0                       0                
  6  1282   # genset.gms.optiSpeed.tableID.id
  0       0                       0                       0                
  6   256   # genset.gms.division.u2
  0       0                       0                       0                
  6   256   # genset.gms.division.y
  0       0                       0                       0                
  6   256   # genset.gms.tRef
  0       0                       0                       0                
  6   256   # genset.gms.throttle
  0       0                       0                       0                
  6   256   # genset.gms.feedback.u1
  0       0                       0                       0                
  6   256   # genset.gms.feedback.u2
  0       0                       0                       0                
  6   256   # genset.gms.feedback.y
  0       1                       0                       0                
  6   256   # genset.gms.gain.k
 -1       0                       0                       0                
  1   280   # genset.gms.zero.k
 -1  1.0000000000000000E+09       0                       0                
  1   280   # genset.gms.limMinW.uMax
 -1      10                       0                       0                
  1   280   # genset.gms.limMinW.uMin
  0       0                       0                       0                
  6   257   # genset.gms.limMinW.strict
  0       2                       1                       4                
  6   258   # genset.gms.limMinW.homotopyType
  0       1                       0                       0                
  6   258   # genset.gms.maxTau.n
  0       0                       0                       0                
  6   256   # genset.gms.maxTau.y[1]
  0       1                       0                       0                
  6   257   # genset.gms.maxTau.tableOnFile
 -1       1                       0                       0                
  1   281   # genset.gms.maxTau.verboseRead
 -1       2                       0                       0                
  1   282   # genset.gms.maxTau.columns[1]
  0       1                       1                       6                
  6   258   # genset.gms.maxTau.smoothness
  0       2                       1                       4                
  6   258   # genset.gms.maxTau.extrapolation
  0       0                       0                       0                
  6   257   # genset.gms.maxTau.verboseExtrapolation
  0       0                       0                       0                
  6   256   # genset.gms.maxTau.u_min
  0       0                       0                       0                
  6   256   # genset.gms.maxTau.u_max
  0       0                       0                       0                
  6  1282   # genset.gms.maxTau.tableID.id
 -1      -1                       0                       0                
  1   280   # genset.gms.gain1.k
  0       0                       0                       0                
  6   256   # genset.gms.gain1.y
  0       0                       0                       0                
  6   257   # genset.gms.tauLimiter.strict
  0       2                       1                       3                
  6   258   # genset.gms.tauLimiter.homotopyType
 -1       0                       0                       0                
  1   280   # genset.gms.tauLimiter.ySimplified
  0       0                       0                       0                
  6   256   # genset.gen.powMax
  0       0                       0                       0                
  6   256   # genset.gen.tauMax
 -1     100                       0                       0                
  1   280   # genset.gen.uDcNom
  0       0                       0                       0                
  6   256   # genset.gen.wMax
 -1  2.5000000000000000E-01       0                       0                
  1   280   # genset.gen.J
  0       1                       0                       0                
  6   257   # genset.gen.mapsOnFile
 -1       0                       0                       0                
  1   280   # genset.gen.effTable[1, 1]
 -1       0                       0                       0                
  1   280   # genset.gen.effTable[1, 2]
 -1       1                       0                       0                
  1   280   # genset.gen.effTable[1, 3]
 -1       0                       0                       0                
  1   280   # genset.gen.effTable[2, 1]
 -1       1                       0                       0                
  1   280   # genset.gen.effTable[2, 2]
 -1       1                       0                       0                
  1   280   # genset.gen.effTable[2, 3]
 -1       1                       0                       0                
  1   280   # genset.gen.effTable[3, 1]
 -1       1                       0                       0                
  1   280   # genset.gen.effTable[3, 2]
 -1       1                       0                       0                
  1   280   # genset.gen.effTable[3, 3]
  0       0                       0                       0                
  6   388   # genset.gen.wSensor.flange.tau
  0       0                       0                       0                
  6   256   # genset.gen.limTau.w
  0       0                       0                       0                
  6   256   # genset.gen.limTau.yH
  0       0                       0                       0                
  6   256   # genset.gen.limTau.powMax
  0       0                       0                       0                
  6   256   # genset.gen.limTau.tauMax
  0       0                       0                       0                
  6   256   # genset.gen.limTau.wMax
  0       0                       0                       0                
  6   322   # genset.gen.limTau.state
 -1  1.0000000000000001E-01       0                       0                
  1  1304   # genset.gen.limTau.alpha
  0       0                       0                       0                
  6   256   # genset.gen.limTau.yL
  0       1                       0                       0                
  6   257   # genset.gen.toElePow.mapsOnFile
  0     400                       0                       0                
  6   256   # genset.gen.toElePow.tauMax
  0   22000                       0                       0                
  6   256   # genset.gen.toElePow.powMax
  0     650                       0                       0                
  6   256   # genset.gen.toElePow.wMax
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.effTable[1, 1]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.effTable[1, 2]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.effTable[1, 3]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.effTable[2, 1]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.effTable[2, 2]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.effTable[2, 3]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.effTable[3, 1]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.effTable[3, 2]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.effTable[3, 3]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.u1
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.u2
  0       1                       0                       0                
  6   257   # genset.gen.toElePow.toEff.tableOnFile
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.table[1, 1]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.table[1, 2]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.table[1, 3]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.table[2, 1]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.table[2, 2]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.table[2, 3]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.table[3, 1]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.table[3, 2]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.table[3, 3]
 -1       1                       0                       0                
  1   281   # genset.gen.toElePow.toEff.verboseRead
  0       1                       1                       6                
  6   258   # genset.gen.toElePow.toEff.smoothness
  0       2                       1                       4                
  6   258   # genset.gen.toElePow.toEff.extrapolation
  0       0                       0                       0                
  6   257   # genset.gen.toElePow.toEff.verboseExtrapolation
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.u_min[1]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.u_min[2]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.u_max[1]
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.toEff.u_max[2]
  0       0                       0                       0                
  6  1282   # genset.gen.toElePow.toEff.tableID.id
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.tau
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.abs1.y
  0       0                       0                       0                
  6   257   # genset.gen.toElePow.abs1.generateEvent
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.abs2.y
  0       0                       0                       0                
  6   257   # genset.gen.toElePow.abs2.generateEvent
  0       1                       0                       0                
  6   256   # genset.gen.toElePow.normalizeTau.k
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.applyEta.eta
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.applyEta.P
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.applyEta.Pel
  0       0                       0                       0                
  6   256   # genset.gen.toElePow.applyEta.Losses
  0       1                       0                       0                
  6   256   # genset.gen.toElePow.normalizeSpeed.k
  0       0                       0                       0                
  6   260   # genset.gen.pin_p.v
  0       0                       0                       0                
  6   256   # genset.gen.constPDC.vNom
 -1  1.0000000000000000E-02       0                       0                
  1   280   # genset.gen.constPDC.Ti
  0       0                       0                       0                
  6   256   # genset.gen.constPDC.feedback1.u2
  0       0                       0                       0                
  6   256   # genset.gen.constPDC.feedback1.y
  0       0                       0                       0                
  6   260   # genset.gen.constPDC.pin_p.v
  0       0                       0                       0                
  6   256   # genset.gen.constPDC.Pref
  0       0                       0                       0                
  6   260   # genset.gen.constPDC.pSensor.pc.v
  0       0                       0                       0                
  6   260   # genset.gen.constPDC.pSensor.nc.v
  0       0                       0                       0                
  6   260   # genset.gen.constPDC.pSensor.pv.v
  0       0                       0                       0                
  6   388   # genset.gen.constPDC.pSensor.pv.i
  0       0                       0                       0                
  6   388   # genset.gen.constPDC.pSensor.nv.i
  0       0                       0                       0                
  6   260   # genset.gen.constPDC.pSensor.voltageSensor.p.v
  0       0                       0                       0                
  6   388   # genset.gen.constPDC.pSensor.voltageSensor.p.i
  0       0                       0                       0                
  6   388   # genset.gen.constPDC.pSensor.voltageSensor.n.i
  0       0                       0                       0                
  6   260   # genset.gen.constPDC.pSensor.currentSensor.p.v
  0       0                       0                       0                
  6   260   # genset.gen.constPDC.pSensor.currentSensor.n.v
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # genset.gen.constPDC.varCond.T_ref
 -1       0                       0                       0                
  1   280   # genset.gen.constPDC.varCond.alpha
  0       0                       0                       0                
  6   260   # genset.gen.constPDC.varCond.p.v
  0       0                       0                       0                
  6   769   # genset.gen.constPDC.varCond.useHeatPort
  0  2.8814999999999998E+02       0                 1.0000000000000000E+100
  6   256   # genset.gen.constPDC.varCond.T
  0       0                       0                       0                
  6   256   # genset.gen.constPDC.varCond.LossPower
  0       0                       0                       0                
  6   256   # genset.gen.constPDC.varCond.G_actual
  0       0                       0                       0                
  6   256   # genset.gen.constPDC.integrator1.k
  0       0                       0                       0                
  6   769   # genset.gen.constPDC.integrator1.use_reset
  0       0                       0                       0                
  6   769   # genset.gen.constPDC.integrator1.use_set
  0       3                       1                       4                
  6   258   # genset.gen.constPDC.integrator1.initType
 -1       0                       0                       0                
  1   280   # genset.gen.constPDC.integrator1.y_start
 -1       0                       0                       0                
  2   272   # genset.gen.constPDC.integrator1.y
  0       0                       0                       0                
  3   256   # genset.gen.constPDC.integrator1.der(y)
  0       0                       0                       0                
  6   769   # genset.gen.constPDC.integrator1.local_reset
  0       0                       0                       0                
  6   768   # genset.gen.constPDC.integrator1.local_set
  0       1                       0                 1.0000000000000000E+100
  6   256   # genset.gen.inertia.J
  0       3                       1                       5                
  6   770   # genset.gen.inertia.stateSelect
 -1       0                       0                       0                
  2   272   # genset.gen.inertia.w
  0       0                       0                       0                
  3   256   # genset.gen.inertia.der(w)
  0       0                       0                       0                
  6   769   # genset.gen.torque.useSupport
  0       0                       0                       0                
  6  1280   # genset.gen.torque.phi_support
 -1       1                       0                       0                
  1   280   # genset.gen.gain.k
  0       0                       0                       0                
  6   256   # genset.gen.powSensor.power
  0       0                       0                       0                
  6   257   # genset.gen.variableLimiter.strict
  0       2                       1                       3                
  6   258   # genset.gen.variableLimiter.homotopyType
 -1       0                       0                       0                
  1   280   # genset.gen.variableLimiter.ySimplified
  0       0                       0                       0                
  6   256   # genset.gen.tauRef
 -1  1.0000000000000001E-01       0                       0                
  1   280   # genset.mbIce.contrGain
  0       0                       0                       0                
  6   256   # genset.mbIce.wIceStart
 -1      10                       0                       0                
  1   280   # genset.mbIce.iceJ
  0       1                       0                       0                
  6   257   # genset.mbIce.mapsOnFile
 -1     100                       0                       0                
  1   280   # genset.mbIce.maxIceTau[1, 1]
 -1      80                       0                       0                
  1   280   # genset.mbIce.maxIceTau[1, 2]
 -1     200                       0                       0                
  1   280   # genset.mbIce.maxIceTau[2, 1]
 -1      85                       0                       0                
  1   280   # genset.mbIce.maxIceTau[2, 2]
 -1     300                       0                       0                
  1   280   # genset.mbIce.maxIceTau[3, 1]
 -1      92                       0                       0                
  1   280   # genset.mbIce.maxIceTau[3, 2]
 -1     350                       0                       0                
  1   280   # genset.mbIce.maxIceTau[4, 1]
 -1      98                       0                       0                
  1   280   # genset.mbIce.maxIceTau[4, 2]
 -1     400                       0                       0                
  1   280   # genset.mbIce.maxIceTau[5, 1]
 -1      98                       0                       0                
  1   280   # genset.mbIce.maxIceTau[5, 2]
 -1       0                       0                       0                
  1   280   # genset.mbIce.specificCons[1, 1]
 -1     100                       0                       0                
  1   280   # genset.mbIce.specificCons[1, 2]
 -1     200                       0                       0                
  1   280   # genset.mbIce.specificCons[1, 3]
 -1     300                       0                       0                
  1   280   # genset.mbIce.specificCons[1, 4]
 -1     400                       0                       0                
  1   280   # genset.mbIce.specificCons[1, 5]
 -1     500                       0                       0                
  1   280   # genset.mbIce.specificCons[1, 6]
 -1      10                       0                       0                
  1   280   # genset.mbIce.specificCons[2, 1]
 -1     630                       0                       0                
  1   280   # genset.mbIce.specificCons[2, 2]
 -1     580                       0                       0                
  1   280   # genset.mbIce.specificCons[2, 3]
 -1     550                       0                       0                
  1   280   # genset.mbIce.specificCons[2, 4]
 -1     580                       0                       0                
  1   280   # genset.mbIce.specificCons[2, 5]
 -1     630                       0                       0                
  1   280   # genset.mbIce.specificCons[2, 6]
 -1      20                       0                       0                
  1   280   # genset.mbIce.specificCons[3, 1]
 -1     430                       0                       0                
  1   280   # genset.mbIce.specificCons[3, 2]
 -1     420                       0                       0                
  1   280   # genset.mbIce.specificCons[3, 3]
 -1     400                       0                       0                
  1   280   # genset.mbIce.specificCons[3, 4]
 -1     400                       0                       0                
  1   280   # genset.mbIce.specificCons[3, 5]
 -1     450                       0                       0                
  1   280   # genset.mbIce.specificCons[3, 6]
 -1      30                       0                       0                
  1   280   # genset.mbIce.specificCons[4, 1]
 -1     320                       0                       0                
  1   280   # genset.mbIce.specificCons[4, 2]
 -1     325                       0                       0                
  1   280   # genset.mbIce.specificCons[4, 3]
 -1     330                       0                       0                
  1   280   # genset.mbIce.specificCons[4, 4]
 -1     340                       0                       0                
  1   280   # genset.mbIce.specificCons[4, 5]
 -1     350                       0                       0                
  1   280   # genset.mbIce.specificCons[4, 6]
 -1      40                       0                       0                
  1   280   # genset.mbIce.specificCons[5, 1]
 -1     285                       0                       0                
  1   280   # genset.mbIce.specificCons[5, 2]
 -1     285                       0                       0                
  1   280   # genset.mbIce.specificCons[5, 3]
 -1     288                       0                       0                
  1   280   # genset.mbIce.specificCons[5, 4]
 -1     290                       0                       0                
  1   280   # genset.mbIce.specificCons[5, 5]
 -1     300                       0                       0                
  1   280   # genset.mbIce.specificCons[5, 6]
 -1      50                       0                       0                
  1   280   # genset.mbIce.specificCons[6, 1]
 -1     270                       0                       0                
  1   280   # genset.mbIce.specificCons[6, 2]
 -1     265                       0                       0                
  1   280   # genset.mbIce.specificCons[6, 3]
 -1     265                       0                       0                
  1   280   # genset.mbIce.specificCons[6, 4]
 -1     270                       0                       0                
  1   280   # genset.mbIce.specificCons[6, 5]
 -1     275                       0                       0                
  1   280   # genset.mbIce.specificCons[6, 6]
 -1      60                       0                       0                
  1   280   # genset.mbIce.specificCons[7, 1]
 -1     255                       0                       0                
  1   280   # genset.mbIce.specificCons[7, 2]
 -1     248                       0                       0                
  1   280   # genset.mbIce.specificCons[7, 3]
 -1     250                       0                       0                
  1   280   # genset.mbIce.specificCons[7, 4]
 -1     255                       0                       0                
  1   280   # genset.mbIce.specificCons[7, 5]
 -1     258                       0                       0                
  1   280   # genset.mbIce.specificCons[7, 6]
 -1      70                       0                       0                
  1   280   # genset.mbIce.specificCons[8, 1]
 -1     245                       0                       0                
  1   280   # genset.mbIce.specificCons[8, 2]
 -1     237                       0                       0                
  1   280   # genset.mbIce.specificCons[8, 3]
 -1     238                       0                       0                
  1   280   # genset.mbIce.specificCons[8, 4]
 -1     243                       0                       0                
  1   280   # genset.mbIce.specificCons[8, 5]
 -1     246                       0                       0                
  1   280   # genset.mbIce.specificCons[8, 6]
 -1      80                       0                       0                
  1   280   # genset.mbIce.specificCons[9, 1]
 -1     245                       0                       0                
  1   280   # genset.mbIce.specificCons[9, 2]
 -1     230                       0                       0                
  1   280   # genset.mbIce.specificCons[9, 3]
 -1     233                       0                       0                
  1   280   # genset.mbIce.specificCons[9, 4]
 -1     237                       0                       0                
  1   280   # genset.mbIce.specificCons[9, 5]
 -1     240                       0                       0                
  1   280   # genset.mbIce.specificCons[9, 6]
 -1      90                       0                       0                
  1   280   # genset.mbIce.specificCons[10, 1]
 -1     235                       0                       0                
  1   280   # genset.mbIce.specificCons[10, 2]
 -1     230                       0                       0                
  1   280   # genset.mbIce.specificCons[10, 3]
 -1     228                       0                       0                
  1   280   # genset.mbIce.specificCons[10, 4]
 -1     233                       0                       0                
  1   280   # genset.mbIce.specificCons[10, 5]
 -1     235                       0                       0                
  1   280   # genset.mbIce.specificCons[10, 6]
  0       0                       0                       0                
  6   388   # genset.mbIce.inertia.flange_a.tau
  0       1                       0                 1.0000000000000000E+100
  6   256   # genset.mbIce.inertia.J
  0       3                       1                       5                
  6   770   # genset.mbIce.inertia.stateSelect
  0       0                       0                       0                
  6   256   # genset.mbIce.inertia.w
  0       0                       0                       0                
  6   256   # genset.mbIce.inertia.der(w)
  0       0                       0                       0                
  6   769   # genset.mbIce.iceTau.useSupport
  0       0                       0                       0                
  6  1280   # genset.mbIce.iceTau.phi_support
  0       0                       0                       0                
  6   256   # genset.mbIce.icePow.power
  0       0                       0                       0                
  6   388   # genset.mbIce.w.flange.tau
  0       0                       0                       0                
  6   256   # genset.mbIce.toPowW.y
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.y
  0       1                       0                       0                
  6   257   # genset.mbIce.toGramsPerkWh.tableOnFile
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[1, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[1, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[1, 3]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[1, 4]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[1, 5]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[1, 6]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[2, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[2, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[2, 3]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[2, 4]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[2, 5]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[2, 6]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[3, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[3, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[3, 3]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[3, 4]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[3, 5]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[3, 6]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[4, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[4, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[4, 3]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[4, 4]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[4, 5]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[4, 6]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[5, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[5, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[5, 3]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[5, 4]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[5, 5]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[5, 6]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[6, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[6, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[6, 3]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[6, 4]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[6, 5]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[6, 6]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[7, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[7, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[7, 3]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[7, 4]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[7, 5]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[7, 6]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[8, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[8, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[8, 3]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[8, 4]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[8, 5]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[8, 6]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[9, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[9, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[9, 3]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[9, 4]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[9, 5]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[9, 6]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[10, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[10, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[10, 3]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[10, 4]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[10, 5]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.table[10, 6]
 -1       1                       0                       0                
  1   281   # genset.mbIce.toGramsPerkWh.verboseRead
  0       1                       1                       6                
  6   258   # genset.mbIce.toGramsPerkWh.smoothness
  0       2                       1                       4                
  6   258   # genset.mbIce.toGramsPerkWh.extrapolation
  0       0                       0                       0                
  6   257   # genset.mbIce.toGramsPerkWh.verboseExtrapolation
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.u_min[1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.u_min[2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.u_max[1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toGramsPerkWh.u_max[2]
  0       0                       0                       0                
  6  1282   # genset.mbIce.toGramsPerkWh.tableID.id
 -1  1.0000000000000000E-03       0                       0                
  1   280   # genset.mbIce.tokW.k
  0       0                       0                       0                
  6   256   # genset.mbIce.tokW.y
  0       0                       0                       0                
  6   256   # genset.mbIce.toG_perHour.u2
 -1  2.7777777777777776E-07       0                       0                
  1   280   # genset.mbIce.tokgFuel.k
  0       0                       0                       0                
  6   769   # genset.mbIce.tokgFuel.use_reset
  0       0                       0                       0                
  6   769   # genset.mbIce.tokgFuel.use_set
  0       3                       1                       4                
  6   258   # genset.mbIce.tokgFuel.initType
 -1       0                       0                       0                
  1   280   # genset.mbIce.tokgFuel.y_start
 -1       0                       0                       0                
  2   272   # genset.mbIce.tokgFuel.y
  0       0                       0                       0                
  3   256   # genset.mbIce.tokgFuel.der(y)
  0       0                       0                       0                
  6   769   # genset.mbIce.tokgFuel.local_reset
  0       0                       0                       0                
  6   768   # genset.mbIce.tokgFuel.local_set
 -1       0                       0                       0                
  1   280   # genset.mbIce.zero.k
  0       1                       0                       0                
  6   258   # genset.mbIce.toLimTau.n
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.y[1]
  0       1                       0                       0                
  6   257   # genset.mbIce.toLimTau.tableOnFile
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.table[1, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.table[1, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.table[2, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.table[2, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.table[3, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.table[3, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.table[4, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.table[4, 2]
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.table[5, 1]
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.table[5, 2]
 -1       1                       0                       0                
  1   281   # genset.mbIce.toLimTau.verboseRead
  0       2                       0                       0                
  6   258   # genset.mbIce.toLimTau.columns[1]
  0       1                       1                       6                
  6   258   # genset.mbIce.toLimTau.smoothness
  0       2                       1                       4                
  6   258   # genset.mbIce.toLimTau.extrapolation
  0       0                       0                       0                
  6   257   # genset.mbIce.toLimTau.verboseExtrapolation
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.u_min
  0       0                       0                       0                
  6   256   # genset.mbIce.toLimTau.u_max
  0       0                       0                       0                
  6  1282   # genset.mbIce.toLimTau.tableID.id
  0       0                       0                       0                
  6   256   # genset.mbIce.product.u2
 -1       1                       0                       0                
  1   280   # genset.mbIce.limiter.uMax
 -1       0                       0                       0                
  1   280   # genset.mbIce.limiter.uMin
  0       0                       0                       0                
  6   257   # genset.mbIce.limiter.strict
  0       2                       1                       4                
  6   258   # genset.mbIce.limiter.homotopyType
  0       0                       0                       0                
  6   256   # genset.mbIce.fuelCons
 -1       1                       0                       0                
  1   281   # genset.mbIce.onSignal.k
  0       1                       0                       0                
  6   256   # genset.revGain.k
 -1  2.7777777777777778E-04       0                       0                
  1   280   # genset.toGrams.k
  0       0                       0                       0                
  6   769   # genset.toGrams.use_reset
  0       0                       0                       0                
  6   769   # genset.toGrams.use_set
  0       3                       1                       4                
  6   258   # genset.toGrams.initType
 -1       0                       0                       0                
  1   280   # genset.toGrams.y_start
 -1       0                       0                       0                
  2   272   # genset.toGrams.y
  0       0                       0                       0                
  3   256   # genset.toGrams.der(y)
  0       0                       0                       0                
  6   769   # genset.toGrams.local_reset
  0       0                       0                       0                
  6   768   # genset.toGrams.local_set
 -1     200                       0                       0                
  1   280   # driver.k
 -1    2000                       0                       0                
  1   280   # driver.yMax
  0       3                       1                       4                
  6   258   # driver.extrapolation
  0       0                       0                       0                
  6  1281   # driver.dummy
  0       0                       0                       0                
  6   256   # driver.from_kmh.u
  0       0                       0                       0                
  6   256   # driver.from_kmh.y
  0       1                       1                 1.0000000000000000E+100
  6   258   # driver.driveCyc.nout
  0       1                       0                       0                
  6   257   # driver.driveCyc.tableOnFile
 -1       1                       0                       0                
  1   281   # driver.driveCyc.verboseRead
 -1       2                       0                       0                
  1   282   # driver.driveCyc.columns[1]
  0       1                       1                       6                
  6   258   # driver.driveCyc.smoothness
  0       3                       1                       4                
  6   258   # driver.driveCyc.extrapolation
  0       1                  1.0000000000000001E-15 1.0000000000000000E+100
  6   256   # driver.driveCyc.timeScale
 -1       0                       0                       0                
  1   280   # driver.driveCyc.offset[1]
 -1       0                       0                       0                
  1   280   # driver.driveCyc.startTime
  0       0                       0                       0                
  6   256   # driver.driveCyc.shiftTime
 -1       1                       1                       3                
  1   282   # driver.driveCyc.timeEvents
  0       0                       0                       0                
  6   257   # driver.driveCyc.verboseExtrapolation
  0       0                       0                       0                
  6   256   # driver.driveCyc.t_min
  0       0                       0                       0                
  6   256   # driver.driveCyc.t_max
  0       0                       0                       0                
  6   256   # driver.driveCyc.t_minScaled
  0       0                       0                       0                
  6   256   # driver.driveCyc.t_maxScaled
  0       0                       0                       0                
  6  1280   # driver.driveCyc.p_offset[1]
  0       0                       0                       0                
  6  1282   # driver.driveCyc.tableID.id
  0       0                       0                       0                
  6  1352   # driver.driveCyc.nextTimeEvent
  0       0                       0                       0                
  6  1352   # driver.driveCyc.nextTimeEventScaled
  0       0                       0                       0                
  6  1280   # driver.driveCyc.timeScaled
  0       0                       0                       0                
  6   256   # driver.feedback.y
  0       1                       0                       0                
  6   256   # driver.gain.k
  0       0                       0                       0                
  6   256   # driver.gain.y
  0       1                       0                       0                
  6   256   # driver.limAcc.uMax
 -1       0                       0                       0                
  1   280   # driver.limAcc.uMin
  0       0                       0                       0                
  6   257   # driver.limAcc.strict
  0       2                       1                       4                
  6   258   # driver.limAcc.homotopyType
 -1       0                       0                       0                
  1   280   # driver.limBrak.uMax
  0       0                       0                       0                
  6   256   # driver.limBrak.uMin
  0       0                       0                       0                
  6   257   # driver.limBrak.strict
  0       2                       1                       4                
  6   258   # driver.limBrak.homotopyType
  0       0                       0                       0                
  6   256   # driver.accelTau
  0       0                       0                       0                
  6   256   # driver.brakeTau
  0       1                       0                       0                
  6   256   # driver.limiter1.uMax
  0       0                       0                       0                
  6   256   # driver.limiter1.uMin
  0       0                       0                       0                
  6   257   # driver.limiter1.strict
  0       2                       1                       4                
  6   258   # driver.limiter1.homotopyType
  0       0                       0                       0                
  6   388   # drivePow.pv.i
  0       0                       0                       0                
  6   260   # drivePow.nv.v
  0       0                       0                       0                
  6   388   # drivePow.nv.i
  0       0                       0                       0                
  6   388   # drivePow.voltageSensor.p.i
  0       0                       0                       0                
  6   260   # drivePow.voltageSensor.n.v
  0       0                       0                       0                
  6   388   # drivePow.voltageSensor.n.i
 -1       0                       0                       0                
  2   272   # stateSelect.set1.x[1]
  0       0                       0                       0                
  3   256   # stateSelect.set1.der(x[1])
  0       0                       0                       0                
  6   256   # stateSelect.set1.P[1, 1]
  0       0                       0                       0                
  6   256   # stateSelect.set1.P[1, 2]
  0       0                       0                       0                
  6   256   # stateSelect.set1.P[1, 3]


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, the initialization is performed in the normal way.
#
# - If parameters and inputs are FIXED, and all other variables
#   have special case for continue (-2 in 1st column), or FREE
#   the initialization is ignored and variables are set to these values.
#   This is intended to continue the simulation.
#
#   Which variables will be important for initialization and continue
#   is indicated by value in column 6 & dsStartMasks.
#
char initialDescription(757,113)
Potential at the pin [V]
Current flowing into the pin [A]
= true, if rotational support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
= true, if translational support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
der(Absolute rotation angle of flange2) [rad/s2]
Cut torque in the flange [N.m]
Cut force directed into flange [N]
Fixed offset angle of housing [rad|deg]
Fixed offset position of housing [m]
Wheel radius [m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Transmission ratio (flange_a.phi/flange_b.phi)
Mass of the sliding mass [kg]
Priority to use s and v as states [:#(type=StateSelect)]
Absolute position of center of component (s = flange_a.s + L/2 = flange_b.s - L/2) [m]
Length of component, from left flange to right flange (= flange_b.s - flange_a.s) [m]
Cut force directed into flange [N]
Absolute velocity of component [m/s]
der(Absolute velocity of component) [m/s2]
Absolute position of flange [m]
Power in flange flange_a as output signal [W]
Absolute position of flange [m]
Power in flange flange_a as output signal [W]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute position of support flange [m]
Relative velocity near to zero (see model info text) [m/s]
= true, if frictional element is not active [:#(type=Boolean)]
Path parameter of friction characteristic f = f(a_relfric) [1]
= true, if v_relfric=0 and start of forward sliding [:#(type=Boolean)]
= true, if v_relfric=0 and start of backward sliding [:#(type=Boolean)]
= true, if v_relfric=0 and not sliding [:#(type=Boolean)]
Value of mode is not known [:#(type=Integer)]
Element is not active [:#(type=Integer)]
v_relfric > 0 (forward sliding) [:#(type=Integer)]
v_relfric = 0 (forward sliding, locked or backward sliding) [:#(type=Integer)]
v_relfric < 0 (backward sliding) [:#(type=Integer)]
Mode of friction (-1: backward sliding, 0: stuck, 1: forward sliding, 2: inactive, 3: unknown) [:#(type=Integer)]
[m/s2]
[N]

vehicle mass [kg]
air density [kg/m3|g/cm3]
vehicle cross area [m2]
rolling friction coefficient
aerodinamic drag coefficient




Cut force directed into flange [N]
Nominal electric charge [C]
Minimum open source voltage [V]
Maximum open source voltage [V]
Minimum state of charge
Maximum state of charge
Initial state of charge
Maximum admissible current [A]
Serial resistance "R0" [Ohm]
Serial resistance "R1" [Ohm]
Capacitance in parallel with R1 [F]
Charging/discharging energy efficiency
Charging/discharging current the efficiency refers to [A]
Number of serial connected cells per string [:#(type=Integer)]
Number of parallel connected strings [:#(type=Integer)]
[W]
Voltage drop of the two pins (= p.v - n.v) [V]
der(Voltage drop of the two pins (= p.v - n.v)) [V/s]
Current flowing into the pin [A]
Potential at the pin [V]
Capacitance [F]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing into the pin [A]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
der(Voltage drop of the two pins (= p.v - n.v)) [V/s]
Current flowing into the pin [A]
Capacitance [F]

Voltage drop of the two pins (= p.v - n.v) [V]
der(Voltage drop of the two pins (= p.v - n.v)) [V/s]
Current flowing into the pin [A]
Potential at the pin [V]
Capacitance [F]

Cell capacitance [F]

Maximum battery current [A]
Minimum battery voltage [V]
Maximum battery voltage [V]
Battery admissible electric charge [C]
Battery capacitance [F]
Serial inner resistance R0 of cell package [Ohm]
Serial inner resistance R1 of cell package [Ohm]
[Ohm]
[Ohm]
Battery series inner capacitance C1 [F]
Cell e.m.f. [V]
Cell stray current [A]
Battery e.m.f. [V]
Cell parasitic current [A]
Gain value multiplied with input signal [1]
Output signal connector
Choose whether events shall be generated [:#(type=Boolean)]
Maximum mechnical power [W]
Maximum torque [N.m]
nominal DC voltage [V]
Maximum drive speed [rad/s]
Rotor's moment of inertia [kg.m2]
= true, if tables are taken from a txt file [:#(type=Boolean)]
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]


Maximum mechanical power [W]
Maximum torque  [N.m]
Maximum speed [rad/s]
=0 below base speed; =1 before wMax; =2 in w limit, =3 above wMax [:#(type=Integer)]
fraction of wMax over which the torque is to be brought to zero

[:#(type=Boolean)]
Maximum machine torque [N.m]
Maximum drive power [W]
Maximum machine speed [rad/s]









Connector of Real input signal 1
Connector of Real input signal 2
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
= true, if warning messages are to be printed if table input is outside the definition range [:#(type=Boolean)]
Minimum abscissa value defined in table
Minimum abscissa value defined in table
Maximum abscissa value defined in table
Maximum abscissa value defined in table
[:#(type=Integer)]

Connector of Real output signal
Choose whether events shall be generated [:#(type=Boolean)]
Connector of Real output signal
Choose whether events shall be generated [:#(type=Boolean)]
Gain value multiplied with input signal [1]
efficiency
Delivered Mechanical Power
Absorbed Electrical power
[W]
Gain value multiplied with input signal [1]
Potential at the pin [V]
Current flowing into the pin [A]

inner PI follower integral time constant [s]
Feedback input

Potential at the pin [V]
Reference power
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Potential at the pin [V]
Reference temperature [K|degC]
Temperature coefficient of conductance (G_actual = G/(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual conductance = G/(1 + alpha*(T_heatPort - T_ref)) [S]
Integrator gain [1]
= true, if reset port enabled [:#(type=Boolean)]
= true, if set port enabled and used as reinitialization value when reset [:#(type=Boolean)]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Connector of Real output signal
der(Connector of Real output signal)
[:#(type=Boolean)]

Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute angle of support flange [rad|deg]
Gain value multiplied with input signal [1]
Power in flange flange_a as output signal [W]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.VariableLimiterHomotopy)]
Fixed value of output in simplified model
(positive when motor peration)
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Instantaneous power as output signal [W]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
power filter time constant
hysteresis control lower limit
hysteresis control higher limit
SOC loop gain
Max power that can be requested as output

Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Connector of Real input signal
Connector of Real output signal

Constant output value
Gain value multiplied with input signal [1]
Output signal connector
Gain of input signal 1
Gain of input signal 2

If y=true and u<uLow, switch to y=false
If y=false and u>uHigh, switch to y=true
Value of pre(y) at initial time [:#(type=Boolean)]
[:#(type=Boolean)]
Constant output value
[|kW]
Gain [1]
Time Constant [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Connector of Real output signal
der(Connector of Real output signal)
IdealGear speed reduction factor
[rad/s]
Max mechanical torque [N.m]
Max mechanical power [W]
[rad/s]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Transmission ratio (flange_a.phi/flange_b.phi)
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
Power in flange flange_a as output signal [W]
Potential at the pin [V]
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Connector of Real output signal
maximum torque internally exchanged by the two machines
speed controller gain (throttle per rad/s)
[:#(type=Boolean)]
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
first row: speed, 1st column: torque, body: sp. consumption
Number of inputs (= number of outputs) [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
= true, if warning messages are to be printed if table input is outside the definition range [:#(type=Boolean)]
Minimum abscissa value defined in table
Maximum abscissa value defined in table
[:#(type=Integer)]
Connector of Real input signal 2
Connector of Real output signal
Torque request (positive when ICE delivers power)

Commanded input
Feedback input

Gain value multiplied with input signal [1]
Constant output value
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Number of inputs (= number of outputs) [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
= true, if warning messages are to be printed if table input is outside the definition range [:#(type=Boolean)]
Minimum abscissa value defined in table
Maximum abscissa value defined in table
[:#(type=Integer)]
Gain value multiplied with input signal [1]
Output signal connector
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.VariableLimiterHomotopy)]
Fixed value of output in simplified model
Maximum mechnical power [W]
Maximum torque [N.m]
nominal DC voltage [V]
Maximum drive speed [rad/s]
Rotor's moment of inertia [kg.m2]
= true, if tables are taken from a txt file [:#(type=Boolean)]
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
rows: speeds; columns: torques; both p.u. of max
Cut torque in the flange [N.m]


Maximum mechanical power [W]
Maximum torque  [N.m]
Maximum speed [rad/s]
=0 below base speed; =1 before wMax; =2 in w limit, =3 above wMax [:#(type=Integer)]
fraction of wMax over which the torque is to be brought to zero

[:#(type=Boolean)]
Maximum machine torque [N.m]
Maximum drive power [W]
Maximum machine speed [rad/s]









Connector of Real input signal 1
Connector of Real input signal 2
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
= true, if warning messages are to be printed if table input is outside the definition range [:#(type=Boolean)]
Minimum abscissa value defined in table
Minimum abscissa value defined in table
Maximum abscissa value defined in table
Maximum abscissa value defined in table
[:#(type=Integer)]

Connector of Real output signal
Choose whether events shall be generated [:#(type=Boolean)]
Connector of Real output signal
Choose whether events shall be generated [:#(type=Boolean)]
Gain value multiplied with input signal [1]
efficiency
Delivered Mechanical Power
Absorbed Electrical power
[W]
Gain value multiplied with input signal [1]
Potential at the pin [V]

inner PI follower integral time constant [s]
Feedback input

Potential at the pin [V]
Reference power
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Potential at the pin [V]
Reference temperature [K|degC]
Temperature coefficient of conductance (G_actual = G/(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual conductance = G/(1 + alpha*(T_heatPort - T_ref)) [S]
Integrator gain [1]
= true, if reset port enabled [:#(type=Boolean)]
= true, if set port enabled and used as reinitialization value when reset [:#(type=Boolean)]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Connector of Real output signal
der(Connector of Real output signal)
[:#(type=Boolean)]

Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute angle of support flange [rad|deg]
Gain value multiplied with input signal [1]
Power in flange flange_a as output signal [W]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.VariableLimiterHomotopy)]
Fixed value of output in simplified model
(positive when motor peration)
Proportional controller gain [N.m/W]
[rad/s]
ICE moment of Inertia [kg.m2]
= true, if tables are taken from a txt file [:#(type=Boolean)]
Maximum ICE generated torque [N.m]
Maximum ICE generated torque [N.m]
Maximum ICE generated torque [N.m]
Maximum ICE generated torque [N.m]
Maximum ICE generated torque [N.m]
Maximum ICE generated torque [N.m]
Maximum ICE generated torque [N.m]
Maximum ICE generated torque [N.m]
Maximum ICE generated torque [N.m]
Maximum ICE generated torque [N.m]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
ICE specific consumption map. First column torque, first row speed [g/(kW.h)]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute angular velocity of component (= der(phi)) [rad/s|rpm]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute angle of support flange [rad|deg]
Power in flange flange_a as output signal [W]
Cut torque in the flange [N.m]
Connector of Real output signal
Connector of Real output signal
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
Table matrix (grid u1 = first column, grid u2 = first row; e.g., table=[0, 0; 0, 1])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
= true, if warning messages are to be printed if table input is outside the definition range [:#(type=Boolean)]
Minimum abscissa value defined in table
Minimum abscissa value defined in table
Maximum abscissa value defined in table
Maximum abscissa value defined in table
[:#(type=Integer)]
Gain value multiplied with input signal [1]
Output signal connector
Connector of Real input signal 2
Integrator gain [1]
= true, if reset port enabled [:#(type=Boolean)]
= true, if set port enabled and used as reinitialization value when reset [:#(type=Boolean)]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Connector of Real output signal
der(Connector of Real output signal)
[:#(type=Boolean)]

Constant output value
Number of inputs (= number of outputs) [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (grid = first column; e.g., table=[0, 0; 1, 1; 2, 4])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
= true, if warning messages are to be printed if table input is outside the definition range [:#(type=Boolean)]
Minimum abscissa value defined in table
Maximum abscissa value defined in table
[:#(type=Integer)]
Connector of Real input signal 2
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Fuel consumption (g/h)
Constant output value [:#(type=Boolean)]
Gain value multiplied with input signal [1]
Integrator gain [1]
= true, if reset port enabled [:#(type=Boolean)]
= true, if set port enabled and used as reinitialization value when reset [:#(type=Boolean)]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Connector of Real output signal
der(Connector of Real output signal)
[:#(type=Boolean)]

Controller gain
Max output value (absolute)
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
[:#(type=Boolean)]
Connector of Real input signal to be converted [km/h]
Connector of Real output signal containing input signal u in another unit [m/s]
Number of outputs [:#(type=Integer)]
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Time scale of first table column [s]
Offsets of output signals
Output = offset for time < startTime [s]
Shift time of first table column [s]
Time event handling of table interpolation [:#(type=Modelica.Blocks.Types.TimeEvents)]
= true, if warning messages are to be printed if time is outside the table definition range [:#(type=Boolean)]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table
Maximum (scaled) abscissa value defined in table
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant
Scaled time

Gain value multiplied with input signal [1]
Output signal connector
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
[N.m]
[N.m]
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]






